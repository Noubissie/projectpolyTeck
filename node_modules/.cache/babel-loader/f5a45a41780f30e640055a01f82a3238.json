{"ast":null,"code":"var _jsxFileName = \"/Users/bigmeech/Desktop/med-Meetup/med-health/src/components/modules/Registration/RegistrationForm/index.jsx\";\nimport React from \"react\"; // import RegistrationFormStyles from \"./registrationForm.module.scss\"\n\nimport { Wrapper, Grid } from \"./styles\";\nimport { Formik, FastField, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Container, Input, Button } from \"components/common\";\nconst initialValues = {\n  Email: \"\",\n  Password: \"\"\n};\nconst ValidationSchema = Yup.object({\n  Email: Yup.string().nullable().email().required(\"Enter your email\"),\n  Password: Yup.string().nullable().required(\"password\").min(3)\n});\nexport default (({\n  children\n}) => {\n  let onsubmit = async ({\n    values,\n    submittingProps\n  }) => {\n    console.log(\"this is ok\");\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    as: Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: ValidationSchema,\n    onSubmit: onsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    touched,\n    dirty,\n    isValid,\n    errors,\n    getFieldProps,\n    setFieldValue\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 41\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, Object.assign({\n      component: Input,\n      error: errors.hasOwnProperty(\"Email\") && touched.hasOwnProperty(\"Email\") ? true : undefined,\n      value: values.Email\n    }, getFieldProps(\"Email\"), {\n      name: \"Email\",\n      placeholder: \"Enter You Email\",\n      id: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 41\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Field, Object.assign({\n      component: Input,\n      value: values.Password\n    }, getFieldProps(\"Password\"), {\n      name: \"Password\",\n      id: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      disabled: dirty && isValid ? false : true,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }\n    }, \"Submit\")));\n  }));\n});","map":{"version":3,"sources":["/Users/bigmeech/Desktop/med-Meetup/med-health/src/components/modules/Registration/RegistrationForm/index.jsx"],"names":["React","Wrapper","Grid","Formik","FastField","Field","Form","Yup","Container","Input","Button","initialValues","Email","Password","ValidationSchema","object","string","nullable","email","required","min","children","onsubmit","values","submittingProps","console","log","handleSubmit","handleBlur","handleChange","touched","dirty","isValid","errors","getFieldProps","setFieldValue","hasOwnProperty","undefined"],"mappings":"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","sourcesContent":["import React from \"react\"\n// import RegistrationFormStyles from \"./registrationForm.module.scss\"\nimport {Wrapper,Grid} from \"./styles\"\nimport {Formik, FastField,Field,Form} from \"formik\"\nimport * as Yup from \"yup\"\nimport { Container,Input,Button} from \"components/common\"\n\nconst initialValues = {\n    Email:\"\",\n    Password:\"\"\n}\nconst ValidationSchema = Yup.object({\n    Email:Yup.string().nullable().email().required(\"Enter your email\"),\n    Password:Yup.string().nullable().required(\"password\").min(3)\n})\nexport default ({children})=>{\n    let onsubmit = async ({values,submittingProps})=>{\n        console.log(\"this is ok\")\n    }\n\n    return(\n        <Wrapper as={Container}>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={ValidationSchema}\n                onSubmit={onsubmit}>\n                    {({values,\n                        handleSubmit,\n                        handleBlur,\n                        handleChange,\n                        touched,\n                        dirty,\n                        isValid,\n                        errors,\n                        getFieldProps,\n                        setFieldValue\n\n                    })=>{\n                        return(\n                                <Form onSubmit={handleSubmit}>\n                                    <Grid>\n                                        <div>\n                                        <label htmlFor=\"Email\">Email</label>\n                                        <Field\n                                            component={Input}\n                                            error={errors.hasOwnProperty(\"Email\") && touched.hasOwnProperty(\"Email\")? true : undefined }\n                                            value={values.Email}\n                                            {...getFieldProps(\"Email\")}\n                                            name=\"Email\"\n                                            placeholder=\"Enter You Email\"\n                                            id=\"Email\"\n                                            />\n                                        </div>\n                                        \n                                        <label htmlFor=\"Password\">Password</label>\n\n                                        <Field\n                                            component={Input}\n                                            value={values.Password}\n                                            {...getFieldProps(\"Password\")}\n                                            name=\"Password\"\n                                            id=\"Password\"\n                                            />\n                                        <Button  disabled={dirty && isValid ? false: true } type=\"submit\">Submit</Button>\n                                        \n                                    </Grid>\n                                </Form>\n                        )\n                    }}\n            </Formik>\n        </Wrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}