{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useMedia = (queries, values, defaultValue) => {\n  const [value, setValue] = useState(null);\n  useEffect(() => {\n    const mediaQueryLists = queries.map(q => window.matchMedia(q));\n\n    const getValue = () => {\n      const index = mediaQueryLists.findIndex(mql => mql.matches);\n      return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n    };\n\n    setValue(getValue);\n\n    const handler = () => setValue(getValue);\n\n    mediaQueryLists.forEach(mql => mql.addListener(handler));\n    return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\n  }, [defaultValue, queries, values]);\n  return value;\n};\n\nexport default useMedia;","map":{"version":3,"sources":["/Users/bigmeech/Desktop/SMS-ALL/sms-AUth-url-page/src/hooks/useMedia.js"],"names":["useState","useEffect","useMedia","queries","values","defaultValue","value","setValue","mediaQueryLists","map","q","window","matchMedia","getValue","index","findIndex","mql","matches","handler","forEach","addListener","removeListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,MAAV,EAAkBC,YAAlB,KAAmC;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,eAAe,GAAGL,OAAO,CAACM,GAAR,CAAYC,CAAC,IAAIC,MAAM,CAACC,UAAP,CAAkBF,CAAlB,CAAjB,CAAxB;;AAEA,UAAMG,QAAQ,GAAG,MAAM;AACrB,YAAMC,KAAK,GAAGN,eAAe,CAACO,SAAhB,CAA0BC,GAAG,IAAIA,GAAG,CAACC,OAArC,CAAd;AACA,aAAO,OAAOb,MAAM,CAACU,KAAD,CAAb,KAAyB,WAAzB,GAAuCV,MAAM,CAACU,KAAD,CAA7C,GAAuDT,YAA9D;AACD,KAHD;;AAKAE,IAAAA,QAAQ,CAACM,QAAD,CAAR;;AACA,UAAMK,OAAO,GAAG,MAAMX,QAAQ,CAACM,QAAD,CAA9B;;AACAL,IAAAA,eAAe,CAACW,OAAhB,CAAwBH,GAAG,IAAIA,GAAG,CAACI,WAAJ,CAAgBF,OAAhB,CAA/B;AACA,WAAO,MAAMV,eAAe,CAACW,OAAhB,CAAwBH,GAAG,IAAIA,GAAG,CAACK,cAAJ,CAAmBH,OAAnB,CAA/B,CAAb;AACD,GAZQ,EAYN,CAACb,YAAD,EAAeF,OAAf,EAAwBC,MAAxB,CAZM,CAAT;AAcA,SAAOE,KAAP;AACD,CAlBD;;AAoBA,eAAeJ,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useMedia = (queries, values, defaultValue) => {\n  const [value, setValue] = useState(null);\n\n  useEffect(() => {\n    const mediaQueryLists = queries.map(q => window.matchMedia(q));\n\n    const getValue = () => {\n      const index = mediaQueryLists.findIndex(mql => mql.matches);\n      return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n    };\n\n    setValue(getValue);\n    const handler = () => setValue(getValue);\n    mediaQueryLists.forEach(mql => mql.addListener(handler));\n    return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\n  }, [defaultValue, queries, values]);\n\n  return value;\n};\n\nexport default useMedia;\n"]},"metadata":{},"sourceType":"module"}