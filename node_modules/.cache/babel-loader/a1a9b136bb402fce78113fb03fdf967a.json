{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bigmeech/Desktop/SMS-ALL/endHungerProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bigmeech/Desktop/SMS-ALL/endHungerProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext}from\"react\";// import RegistrationFormStyles from \"./registrationForm.module.scss\"\nimport{Wrapper,Grid}from\"./styles\";import{Formik,Field,Form}from\"formik\";import*as Yup from\"yup\";import{Input,Button}from\"components/common\";import{ThemeContext}from'providers/ThemeProvider';var initialValues={LastName:\"\",FirstName:\"\",Email:\"\",Contact:\"\",Policy:\"\",Aggreement:\"\"};var ValidationSchema=Yup.object({LastName:Yup.string().nullable().required(\"Family Name\"),FirstName:Yup.string().nullable().required(\"Given Name\"),Email:Yup.string().nullable().email().required(\"Enter your email\"),Contact:Yup.string().nullable().required(\"Contact\"),Policy:Yup.boolean().oneOf([true],\"Accept the policy Aggreement\").nullable().required(\"Policy\"),Aggreement:Yup.boolean().oneOf([true],\"Accept Confidentiality Aggreement\").nullable()});export default(function(_ref){var children=_ref.children;var _useContext=useContext(ThemeContext),theme=_useContext.theme;var onsubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var values,submittingProps;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:values=_ref2.values,submittingProps=_ref2.submittingProps;console.log(\"this is ok\");case 2:case\"end\":return _context.stop();}}},_callee);}));return function onsubmit(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Wrapper,null,/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,validationSchema:ValidationSchema,onSubmit:onsubmit},function(_ref4){var values=_ref4.values,handleSubmit=_ref4.handleSubmit,handleBlur=_ref4.handleBlur,handleChange=_ref4.handleChange,touched=_ref4.touched,dirty=_ref4.dirty,isValid=_ref4.isValid,errors=_ref4.errors,getFieldProps=_ref4.getFieldProps,setFieldValue=_ref4.setFieldValue;return/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Registration Form \"),console.log(\"VALUE::\",values),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Email\"},\"First Name/Given Name\"),/*#__PURE__*/React.createElement(Field,Object.assign({component:Input,error:errors.hasOwnProperty(\"FirstName\")&&touched.hasOwnProperty(\"FirstName\")?true:undefined,value:values.FirstName},getFieldProps(\"FirstName\"),{name:\"FirstName\",theme:theme// placeholder=\"Enter You LastName\"\n,id:\"FirstName\"}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"LastName\"},\"Last Name/ Family Name\"),/*#__PURE__*/React.createElement(Field,Object.assign({component:Input// error={errors.hasOwnProperty(\"LastName\") && touched.hasOwnProperty(\"LastName\")? true : undefined }\n,value:values.LastName},getFieldProps(\"LastName\"),{name:\"LastName\"// placeholder=\"Enter You LastName\"\n,id:\"LastName\",theme:theme}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Email\"},\"Email\"),/*#__PURE__*/React.createElement(Field,Object.assign({component:Input// error={errors.hasOwnProperty(\"Email\") && touched.hasOwnProperty(\"Email\")? true : undefined }\n,value:values.Email},getFieldProps(\"Email\"),{name:\"Email\"// placeholder=\"Enter You Email\"\n,id:\"Email\",theme:theme}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Contact\"},\"Contact\"),/*#__PURE__*/React.createElement(Field,Object.assign({component:Input,value:values.Contact},getFieldProps(\"Contact\"),{name:\"Contact\",id:\"Contact\",theme:theme}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Policy\"},/*#__PURE__*/React.createElement(Field,Object.assign({component:Input,value:values.Policy},getFieldProps(\"Policy\"),{name:\"Policy\",type:\"checkbox\",id:\"Policy\",style:{width:\"20px\"}})),\"I have read and aggreed to the policies and Aggreement\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Aggreement\"},/*#__PURE__*/React.createElement(Field,Object.assign({component:Input,value:values.Aggreement,type:\"checkbox\"},getFieldProps(\"Aggreement\"),{name:\"Aggreement\",id:\"Aggreement\",style:{width:\"20px\"}})),\"I have read and aggreed to the policies and Aggreement\")),/*#__PURE__*/React.createElement(Button,{disabled:dirty&&isValid?false:true,type:\"submit\"},\"Submit\")));}));});","map":{"version":3,"sources":["/Users/bigmeech/Desktop/SMS-ALL/endHungerProject/src/components/modules/RegistrationLogin/Registration/index.jsx"],"names":["React","useContext","Wrapper","Grid","Formik","Field","Form","Yup","Input","Button","ThemeContext","initialValues","LastName","FirstName","Email","Contact","Policy","Aggreement","ValidationSchema","object","string","nullable","required","email","boolean","oneOf","children","theme","onsubmit","values","submittingProps","console","log","handleSubmit","handleBlur","handleChange","touched","dirty","isValid","errors","getFieldProps","setFieldValue","hasOwnProperty","undefined","width"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA;AACA,OAAQC,OAAR,CAAgBC,IAAhB,KAA2B,UAA3B,CACA,OAAQC,MAAR,CAAeC,KAAf,CAAqBC,IAArB,KAAgC,QAAhC,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,KAAT,CAAeC,MAAf,KAA4B,mBAA5B,CACA,OAASC,YAAT,KAA6B,yBAA7B,CACA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,QAAQ,CAAC,EADS,CAElBC,SAAS,CAAC,EAFQ,CAGlBC,KAAK,CAAC,EAHY,CAIlBC,OAAO,CAAC,EAJU,CAKlBC,MAAM,CAAC,EALW,CAMlBC,UAAU,CAAC,EANO,CAAtB,CAQA,GAAMC,CAAAA,gBAAgB,CAAGX,GAAG,CAACY,MAAJ,CAAW,CAChCP,QAAQ,CAACL,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiC,aAAjC,CADuB,CAEhCT,SAAS,CAACN,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiC,YAAjC,CAFsB,CAGhCR,KAAK,CAACP,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBE,KAAxB,GAAgCD,QAAhC,CAAyC,kBAAzC,CAH0B,CAIhCP,OAAO,CAACR,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiC,SAAjC,CAJwB,CAKhCN,MAAM,CAACT,GAAG,CAACiB,OAAJ,GAAcC,KAAd,CAAoB,CAAC,IAAD,CAApB,CAA2B,8BAA3B,EAA2DJ,QAA3D,GAAsEC,QAAtE,CAA+E,QAA/E,CALyB,CAMhCL,UAAU,CAACV,GAAG,CAACiB,OAAJ,GAAcC,KAAd,CAAoB,CAAC,IAAD,CAApB,CAA2B,mCAA3B,EAAgEJ,QAAhE,EANqB,CAAX,CAAzB,CAQA,eAAkB,cAAc,IAAZK,CAAAA,QAAY,MAAZA,QAAY,iBAEVzB,UAAU,CAACS,YAAD,CAFA,CAEpBiB,KAFoB,aAEpBA,KAFoB,CAI5B,GAAIC,CAAAA,QAAQ,2FAAG,mKAAQC,MAAR,OAAQA,MAAR,CAAeC,eAAf,OAAeA,eAAf,CACXC,OAAO,CAACC,GAAR,CAAY,YAAZ,EADW,sDAAH,kBAARJ,CAAAA,QAAQ,6CAAZ,CAIA,mBACI,oBAAC,OAAD,mBACI,oBAAC,MAAD,EACI,aAAa,CAAEjB,aADnB,CAEI,gBAAgB,CAAEO,gBAFtB,CAGI,QAAQ,CAAEU,QAHd,EAIS,eAWG,IAXDC,CAAAA,MAWC,OAXDA,MAWC,CAVAI,YAUA,OAVAA,YAUA,CATAC,UASA,OATAA,UASA,CARAC,YAQA,OARAA,YAQA,CAPAC,OAOA,OAPAA,OAOA,CANAC,KAMA,OANAA,KAMA,CALAC,OAKA,OALAA,OAKA,CAJAC,MAIA,OAJAA,MAIA,CAHAC,aAGA,OAHAA,aAGA,CAFAC,aAEA,OAFAA,aAEA,CACA,mBACQ,oBAAC,IAAD,EAAM,QAAQ,CAAER,YAAhB,eACI,oBAAC,IAAD,mBACI,mDADJ,CAEKF,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAsBH,MAAtB,CAFL,cAGA,4CACQ,6BAAO,OAAO,CAAC,OAAf,0BADR,cAEQ,oBAAC,KAAD,gBACI,SAAS,CAAErB,KADf,CAEI,KAAK,CAAE+B,MAAM,CAACG,cAAP,CAAsB,WAAtB,GAAsCN,OAAO,CAACM,cAAR,CAAuB,WAAvB,CAAtC,CAA2E,IAA3E,CAAkFC,SAF7F,CAGI,KAAK,CAAEd,MAAM,CAAChB,SAHlB,EAIQ2B,aAAa,CAAC,WAAD,CAJrB,EAKI,IAAI,CAAC,WALT,CAMI,KAAK,CAAEb,KACP;AAPJ,CAQI,EAAE,CAAC,WARP,GAFR,CAHA,cAgBA,4CACQ,6BAAO,OAAO,CAAC,UAAf,2BADR,cAEQ,oBAAC,KAAD,gBACI,SAAS,CAAEnB,KACX;AAFJ,CAGI,KAAK,CAAEqB,MAAM,CAACjB,QAHlB,EAIQ4B,aAAa,CAAC,UAAD,CAJrB,EAKI,IAAI,CAAC,UACL;AANJ,CAOI,EAAE,CAAC,UAPP,CAQI,KAAK,CAAEb,KARX,GAFR,CAhBA,cA6BI,4CACI,6BAAO,OAAO,CAAC,OAAf,UADJ,cAEI,oBAAC,KAAD,gBACI,SAAS,CAAEnB,KACX;AAFJ,CAGI,KAAK,CAAEqB,MAAM,CAACf,KAHlB,EAIQ0B,aAAa,CAAC,OAAD,CAJrB,EAKI,IAAI,CAAC,OACL;AANJ,CAOI,EAAE,CAAC,OAPP,CAQI,KAAK,CAAEb,KARX,GAFJ,CA7BJ,cA2CI,4CACI,6BAAO,OAAO,CAAC,SAAf,YADJ,cAEI,oBAAC,KAAD,gBACI,SAAS,CAAEnB,KADf,CAEI,KAAK,CAAEqB,MAAM,CAACd,OAFlB,EAGQyB,aAAa,CAAC,SAAD,CAHrB,EAII,IAAI,CAAC,SAJT,CAKI,EAAE,CAAC,SALP,CAMI,KAAK,CAAEb,KANX,GAFJ,CA3CJ,cAsDI,4CACI,6BAAO,OAAO,CAAC,QAAf,eACI,oBAAC,KAAD,gBACI,SAAS,CAAEnB,KADf,CAEI,KAAK,CAAEqB,MAAM,CAACb,MAFlB,EAGQwB,aAAa,CAAC,QAAD,CAHrB,EAII,IAAI,CAAC,QAJT,CAKI,IAAI,CAAC,UALT,CAMI,EAAE,CAAC,QANP,CAOI,KAAK,CAAE,CAACI,KAAK,CAAC,MAAP,CAPX,GADJ,0DADJ,CAtDJ,cAqEI,4CACI,6BAAO,OAAO,CAAC,YAAf,eACI,oBAAC,KAAD,gBACI,SAAS,CAAEpC,KADf,CAEI,KAAK,CAAEqB,MAAM,CAACZ,UAFlB,CAGI,IAAI,CAAC,UAHT,EAIQuB,aAAa,CAAC,YAAD,CAJrB,EAKI,IAAI,CAAC,YALT,CAMI,EAAE,CAAC,YANP,CAOI,KAAK,CAAE,CAACI,KAAK,CAAC,MAAP,CAPX,GADJ,0DADJ,CArEJ,cAmFI,oBAAC,MAAD,EAAS,QAAQ,CAAEP,KAAK,EAAIC,OAAT,CAAmB,KAAnB,CAA0B,IAA7C,CAAoD,IAAI,CAAC,QAAzD,WAnFJ,CADJ,CADR,CA0FH,CA1GT,CADJ,CADJ,CAgHH,CAxHD","sourcesContent":["import React, {useContext} from \"react\"\n// import RegistrationFormStyles from \"./registrationForm.module.scss\"\nimport {Wrapper,Grid} from \"./styles\"\nimport {Formik,Field,Form} from \"formik\"\nimport * as Yup from \"yup\"\nimport { Input,Button} from \"components/common\"\nimport { ThemeContext } from 'providers/ThemeProvider';\nconst initialValues = {\n    LastName:\"\",\n    FirstName:\"\",\n    Email:\"\",\n    Contact:\"\" ,\n    Policy:\"\",\n    Aggreement:\"\"\n}\nconst ValidationSchema = Yup.object({\n    LastName:Yup.string().nullable().required(\"Family Name\"),\n    FirstName:Yup.string().nullable().required(\"Given Name\"),\n    Email:Yup.string().nullable().email().required(\"Enter your email\"),\n    Contact:Yup.string().nullable().required(\"Contact\"),\n    Policy:Yup.boolean().oneOf([true],\"Accept the policy Aggreement\").nullable().required(\"Policy\"),\n    Aggreement:Yup.boolean().oneOf([true],\"Accept Confidentiality Aggreement\").nullable()\n})\nexport default    ({children})=>{\n\n    const { theme } = useContext(ThemeContext);\n\n    let onsubmit = async ({values,submittingProps})=>{\n        console.log(\"this is ok\")\n    }\n\n    return(\n        <Wrapper >\n            <Formik\n                initialValues={initialValues}\n                validationSchema={ValidationSchema}\n                onSubmit={onsubmit}>\n                    {({values,\n                        handleSubmit,\n                        handleBlur,\n                        handleChange,\n                        touched,\n                        dirty,\n                        isValid,\n                        errors,\n                        getFieldProps,\n                        setFieldValue\n\n                    })=>{\n                        return(\n                                <Form onSubmit={handleSubmit}>\n                                    <Grid>\n                                        <h3>Registration Form </h3>\n                                        {console.log(\"VALUE::\",values)}\n                                    <div>\n                                            <label htmlFor=\"Email\">First Name/Given Name</label>\n                                            <Field\n                                                component={Input}\n                                                error={errors.hasOwnProperty(\"FirstName\") && touched.hasOwnProperty(\"FirstName\")? true : undefined }\n                                                value={values.FirstName}\n                                                {...getFieldProps(\"FirstName\")}\n                                                name=\"FirstName\"\n                                                theme={theme}\n                                                // placeholder=\"Enter You LastName\"\n                                                id=\"FirstName\"\n                                                />\n                                    </div>\n                                    <div>\n                                            <label htmlFor=\"LastName\">Last Name/ Family Name</label>\n                                            <Field\n                                                component={Input}\n                                                // error={errors.hasOwnProperty(\"LastName\") && touched.hasOwnProperty(\"LastName\")? true : undefined }\n                                                value={values.LastName}\n                                                {...getFieldProps(\"LastName\")}\n                                                name=\"LastName\"\n                                                // placeholder=\"Enter You LastName\"\n                                                id=\"LastName\"\n                                                theme={theme}\n                                                />\n                                    </div>\n                                        <div>\n                                            <label htmlFor=\"Email\">Email</label>\n                                            <Field\n                                                component={Input}\n                                                // error={errors.hasOwnProperty(\"Email\") && touched.hasOwnProperty(\"Email\")? true : undefined }\n                                                value={values.Email}\n                                                {...getFieldProps(\"Email\")}\n                                                name=\"Email\"\n                                                // placeholder=\"Enter You Email\"\n                                                id=\"Email\"\n                                                theme={theme}\n                                                />\n                                        </div>\n                                        \n                                        <div>\n                                            <label htmlFor=\"Contact\">Contact</label>\n                                            <Field\n                                                component={Input}\n                                                value={values.Contact}\n                                                {...getFieldProps(\"Contact\")}\n                                                name=\"Contact\"\n                                                id=\"Contact\"\n                                                theme={theme}\n                                                />\n                                        </div>\n                                        <div>\n                                            <label htmlFor=\"Policy\">\n                                                <Field\n                                                    component={Input}\n                                                    value={values.Policy}\n                                                    {...getFieldProps(\"Policy\")}\n                                                    name=\"Policy\"\n                                                    type=\"checkbox\"\n                                                    id=\"Policy\"\n                                                    style={{width:\"20px\"}}\n                                                    \n                                                    />\n                                                I have read and aggreed to the policies and Aggreement\n                                            </label>\n                                        </div>\n                                        <div>\n                                            <label htmlFor=\"Aggreement\">\n                                                <Field\n                                                    component={Input}\n                                                    value={values.Aggreement}\n                                                    type=\"checkbox\"\n                                                    {...getFieldProps(\"Aggreement\")}\n                                                    name=\"Aggreement\"\n                                                    id=\"Aggreement\"\n                                                    style={{width:\"20px\"}}\n                                                    />I have read and aggreed to the policies and Aggreement\n                                            </label>\n                                        </div>\n                                        \n                                        <Button  disabled={dirty && isValid ? false: true } type=\"submit\">Submit</Button>\n                                        \n                                    </Grid>\n                                </Form>\n                        )\n                    }}\n            </Formik>\n        </Wrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}