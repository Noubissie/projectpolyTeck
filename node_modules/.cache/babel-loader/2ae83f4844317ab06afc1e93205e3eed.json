{"ast":null,"code":"import _slicedToArray from\"/Users/bigmeech/Desktop/SMS-ALL/endHungerProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import useMedia from'hooks/useMedia';export default(function(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];console.log(\"hello toggle\");var toggleTheme=function toggleTheme(){if(theme==='light'){window.localStorage.setItem('theme','dark');setTheme('dark');}else{window.localStorage.setItem('theme','light');setTheme('light');}};var prefersDarkMode=useMedia(['(prefers-color-scheme: dark)'],[true],false);useEffect(function(){var localTheme=window.localStorage.getItem('theme');if(localTheme){window.localStorage.setItem('theme',localTheme);setTheme(localTheme);}else if(prefersDarkMode){setTheme('dark');}else{setTheme('light');}},[prefersDarkMode]);return[theme,toggleTheme];});","map":{"version":3,"sources":["/Users/bigmeech/Desktop/SMS-ALL/endHungerProject/src/hooks/useDarkMode.js"],"names":["useState","useEffect","useMedia","theme","setTheme","console","log","toggleTheme","window","localStorage","setItem","prefersDarkMode","localTheme","getItem"],"mappings":"uKAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAEA,eAAe,UAAM,eACOF,QAAQ,CAAC,OAAD,CADf,wCACZG,KADY,eACLC,QADK,eAEnBC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIJ,KAAK,GAAK,OAAd,CAAuB,CACrBK,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAqC,MAArC,EACAN,QAAQ,CAAC,MAAD,CAAR,CACD,CAHD,IAGO,CACLI,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAqC,OAArC,EACAN,QAAQ,CAAC,OAAD,CAAR,CACD,CACF,CARD,CAUA,GAAMO,CAAAA,eAAe,CAAGT,QAAQ,CAAC,CAAC,8BAAD,CAAD,CAAmC,CAAC,IAAD,CAAnC,CAA2C,KAA3C,CAAhC,CAEAD,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,UAAU,CAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,CAAnB,CACA,GAAID,UAAJ,CAAgB,CACdJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAqCE,UAArC,EACAR,QAAQ,CAACQ,UAAD,CAAR,CACD,CAHD,IAGO,IAAID,eAAJ,CAAqB,CAC1BP,QAAQ,CAAC,MAAD,CAAR,CACD,CAFM,IAEA,CACLA,QAAQ,CAAC,OAAD,CAAR,CACD,CACF,CAVQ,CAUN,CAACO,eAAD,CAVM,CAAT,CAYA,MAAO,CAACR,KAAD,CAAQI,WAAR,CAAP,CACD,CA5BD","sourcesContent":["import { useState, useEffect } from 'react';\nimport useMedia from 'hooks/useMedia';\n\nexport default () => {\n  const [theme, setTheme] = useState('light');\n  console.log(\"hello toggle\")\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark');\n      setTheme('dark');\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      setTheme('light');\n    }\n  };\n\n  const prefersDarkMode = useMedia(['(prefers-color-scheme: dark)'], [true], false);\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    if (localTheme) {\n      window.localStorage.setItem('theme', localTheme);\n      setTheme(localTheme);\n    } else if (prefersDarkMode) {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  }, [prefersDarkMode]);\n\n  return [theme, toggleTheme];\n};\n"]},"metadata":{},"sourceType":"module"}