{"ast":null,"code":"var _jsxFileName = \"/Users/bigmeech/Desktop/med-Meetup/med-health/src/components/modules/RegistrationLogin/Registration/index.jsx\";\nimport React from \"react\"; // import RegistrationFormStyles from \"./registrationForm.module.scss\"\n\nimport { Wrapper, Grid, Flex } from \"./styles\";\nimport { Formik, FastField, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Input, Button } from \"components/common\";\nimport { FacebookAuthLogin } from \"components/modules/auth/facebook\";\nimport { GoogleAuthLogin } from \"components/modules/auth/google\";\nconst initialValues = {\n  LastName: \"\",\n  GivenName: \"\",\n  Email: \"\",\n  Password: \"\"\n};\nconst ValidationSchema = Yup.object({\n  FamilyName: Yup.string().nullable().required(\"password\"),\n  GivenName: Yup.string().nullable().required(\"password\"),\n  Email: Yup.string().nullable().email().required(\"Enter your email\"),\n  Password: Yup.string().nullable().required(\"password\").min(3)\n});\nexport default (({\n  children\n}) => {\n  let onsubmit = async ({\n    values,\n    submittingProps\n  }) => {\n    console.log(\"this is ok\");\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: ValidationSchema,\n    onSubmit: onsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    touched,\n    dirty,\n    isValid,\n    errors,\n    getFieldProps,\n    setFieldValue\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }\n    }, \"First Name/Given Name\"), /*#__PURE__*/React.createElement(Field, Object.assign({\n      component: Input,\n      error: errors.hasOwnProperty(\"FirstName\") && touched.hasOwnProperty(\"FirstName\") ? true : undefined,\n      value: values.FirstName\n    }, getFieldProps(\"FirstName\"), {\n      name: \"FirstName\",\n      placeholder: \"Enter You Email\",\n      id: \"FirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Family Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, Object.assign({\n      component: Input,\n      error: errors.hasOwnProperty(\"Email\") && touched.hasOwnProperty(\"Email\") ? true : undefined,\n      value: values.Email\n    }, getFieldProps(\"Email\"), {\n      name: \"Email\",\n      placeholder: \"Enter You Email\",\n      id: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, Object.assign({\n      component: Input,\n      error: errors.hasOwnProperty(\"Email\") && touched.hasOwnProperty(\"Email\") ? true : undefined,\n      value: values.Email\n    }, getFieldProps(\"Email\"), {\n      name: \"Email\",\n      placeholder: \"Enter You Email\",\n      id: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 45\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Field, Object.assign({\n      component: Input,\n      value: values.Password\n    }, getFieldProps(\"Password\"), {\n      name: \"Password\",\n      id: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      disabled: dirty && isValid ? false : true,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Flex, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FacebookAuthLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(GoogleAuthLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    }))));\n  }));\n});","map":{"version":3,"sources":["/Users/bigmeech/Desktop/med-Meetup/med-health/src/components/modules/RegistrationLogin/Registration/index.jsx"],"names":["React","Wrapper","Grid","Flex","Formik","FastField","Field","Form","Yup","Input","Button","FacebookAuthLogin","GoogleAuthLogin","initialValues","LastName","GivenName","Email","Password","ValidationSchema","object","FamilyName","string","nullable","required","email","min","children","onsubmit","values","submittingProps","console","log","handleSubmit","handleBlur","handleChange","touched","dirty","isValid","errors","getFieldProps","setFieldValue","hasOwnProperty","undefined","FirstName"],"mappings":"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","sourcesContent":["import React from \"react\"\n// import RegistrationFormStyles from \"./registrationForm.module.scss\"\nimport {Wrapper,Grid,Flex} from \"./styles\"\nimport {Formik, FastField,Field,Form} from \"formik\"\nimport * as Yup from \"yup\"\nimport { Input,Button} from \"components/common\"\nimport {FacebookAuthLogin} from \"components/modules/auth/facebook\"\nimport {GoogleAuthLogin} from \"components/modules/auth/google\"\n\nconst initialValues = {\n    LastName:\"\",\n    GivenName:\"\",\n    Email:\"\",\n    Password:\"\" \n}\nconst ValidationSchema = Yup.object({\n    FamilyName:Yup.string().nullable().required(\"password\"),\n    GivenName:Yup.string().nullable().required(\"password\"),\n    Email:Yup.string().nullable().email().required(\"Enter your email\"),\n    Password:Yup.string().nullable().required(\"password\").min(3)\n})\nexport default    ({children})=>{\n    let onsubmit = async ({values,submittingProps})=>{\n        console.log(\"this is ok\")\n    }\n\n    return(\n        <Wrapper >\n            <Formik\n                initialValues={initialValues}\n                validationSchema={ValidationSchema}\n                onSubmit={onsubmit}>\n                    {({values,\n                        handleSubmit,\n                        handleBlur,\n                        handleChange,\n                        touched,\n                        dirty,\n                        isValid,\n                        errors,\n                        getFieldProps,\n                        setFieldValue\n\n                    })=>{\n                        return(\n                                <Form onSubmit={handleSubmit}>\n                                    <Grid>\n                                    <div>\n                                            <label htmlFor=\"Email\">First Name/Given Name</label>\n                                            <Field\n                                                component={Input}\n                                                error={errors.hasOwnProperty(\"FirstName\") && touched.hasOwnProperty(\"FirstName\")? true : undefined }\n                                                value={values.FirstName}\n                                                {...getFieldProps(\"FirstName\")}\n                                                name=\"FirstName\"\n                                                placeholder=\"Enter You Email\"\n                                                id=\"FirstName\"\n                                                />\n                                    </div>\n                                    <div>\n                                            <label htmlFor=\"Family Name\">Email</label>\n                                            <Field\n                                                component={Input}\n                                                error={errors.hasOwnProperty(\"Email\") && touched.hasOwnProperty(\"Email\")? true : undefined }\n                                                value={values.Email}\n                                                {...getFieldProps(\"Email\")}\n                                                name=\"Email\"\n                                                placeholder=\"Enter You Email\"\n                                                id=\"Email\"\n                                                />\n                                    </div>\n                                        <div>\n                                            <label htmlFor=\"Email\">Email</label>\n                                            <Field\n                                                component={Input}\n                                                error={errors.hasOwnProperty(\"Email\") && touched.hasOwnProperty(\"Email\")? true : undefined }\n                                                value={values.Email}\n                                                {...getFieldProps(\"Email\")}\n                                                name=\"Email\"\n                                                placeholder=\"Enter You Email\"\n                                                id=\"Email\"\n                                                />\n                                        </div>\n                                        \n                                        <div>\n                                            <label htmlFor=\"Password\">Password</label>\n                                            <Field\n                                                component={Input}\n                                                value={values.Password}\n                                                {...getFieldProps(\"Password\")}\n                                                name=\"Password\"\n                                                id=\"Password\"\n                                                />\n                                        </div>\n                                        \n                                        <Button  disabled={dirty && isValid ? false: true } type=\"submit\">Submit</Button>\n                                        \n                                        <Flex>\n                                            <FacebookAuthLogin />\n                                            <GoogleAuthLogin />\n                                        </Flex>\n                                    </Grid>\n                                </Form>\n                        )\n                    }}\n            </Formik>\n        </Wrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}